{"version":3,"sources":["component/AddPageButton.jsx","ContextApi.js","component/Title.jsx","component/HomePage.jsx","component/AddPage.jsx","component/Items.jsx","component/Room.jsx","App.js","index.js"],"names":["AddPageButton","nav","useNavigate","react_default","a","createElement","className","onClick","context","React","createContext","Provider","Consumer","Title","props","value","title","HomePage","console","log","rooms","map","room","theType","theName","index","updateProps","react_router_dom","to","pathname","style","color","backgroundColor","margin","AddPage","_useState","useState","_useState2","Object","slicedToArray","pickedRoom","setpickedRoom","_useState3","_useState4","roomType","setroomType","_useState5","_useState6","pickedName","setpickedName","_useState7","_useState8","roomName","setroomName","_useState9","_useState10","colorPicked","setcolorPicked","_useState11","_useState12","roomList","setroomList","_useState13","_useState14","howManyRoomsCreated","sethowManyRoomsCreated","onChange","e","target","class","length","type","roomIndex","concat","toConsumableArray","setIndex","alert","isValid","roomList1","setCreated","Items","id","display","justifyContent","alignItems","items","item","switchIt","isOn","width","Room","clickCounter","setclickCounter","itemType","setitemType","currList","currIndex","ItemList","currItemIndex","currItemIndex1","setcurrItemIndex","whichItem","addAndToggle","alreadyHaveStereohave","itemList","i","haveStereo","setItems","document","getElementById","name","x","y","z","toggle","itemIndex","remove","App","roomType1","setroomType1","roomName1","setroomName1","setroomIndex","roomIndexClicked","setroomIndexClicked","roomIndexAndItems","setroomIndexAndItems","toHomePage","toRoomPage","toAddPage","react_router","path","element","list","howManyCreated","push","itemStatus","ReactDOM","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.61a5bdfc.chunk.js","sourcesContent":["import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport { useNavigate } from 'react-router-dom';\r\nimport '../App.css'\r\n\r\nexport default function AddPageButton() {\r\n    const nav = useNavigate();\r\n    const navTo = () => {\r\n        nav('/addpage')\r\n    }\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-3\"></div>\r\n                <div className=\"col-6\">\r\n                    <div className=\"btn1\" onClick={navTo}>ADD ROOM</div>\r\n                </div>\r\n                <div className=\"col-3\"></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nconst context = React.createContext()\r\nexport const Provider = context.Provider;\r\nexport const Consumer = context.Consumer;","import React from 'react'\r\nimport {Consumer} from '../ContextApi'\r\nimport '../App.css';\r\n\r\nexport default function Title(props) {\r\n    return (\r\n        <div className=\"title\">\r\n            <Consumer>\r\n                {(value)=>{\r\n                    return <h1> {value.title}</h1>\r\n                }}\r\n            </Consumer>           \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport AddPageButton from './AddPageButton'\r\nimport Title from './Title'\r\nimport '../App.css'\r\nimport {useState} from 'react'\r\nimport { Consumer } from '../ContextApi'\r\nimport { Link} from 'react-router-dom'\r\n\r\n\r\nexport default function HomePage(props) {\r\n\r\n    const updateProps = (room) => {\r\n        props.theType(room[0])\r\n        props.theName(room[1])\r\n        props.index(room[3])\r\n    }\r\n    return (\r\n        <div className=\"homePage\">\r\n            <div className=\"title\"> SMART HOUSE</div>\r\n            <div>\r\n                <Consumer>\r\n                    {(value) =>{\r\n                        console.log(value.rooms)\r\n\r\n                        return(\r\n                            value.rooms.map(room =>\r\n                                    <div onClick={()=>updateProps(room)}>\r\n                                        <Link to={{pathname:\"/room\"}}>                                          \r\n                                            <div  style={{color:\"white\", backgroundColor:room[2], margin:\"5px\"}} className=\"room\"> \r\n                                                \r\n                                                <div>\r\n                                                    {room[1]}\r\n                                                    \r\n                                                </div>\r\n                                                <div>\r\n                                                    {room[0]}\r\n                                                </div>\r\n                                            </div>                        \r\n                                        </Link>  \r\n                                    </div>\r\n                                       \r\n                            )\r\n                        )                \r\n                    }}\r\n                </Consumer>  \r\n            </div >\r\n            <AddPageButton/>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Title from './Title';\r\nimport { useState, useEffect } from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport HomePage from './HomePage';\r\n\r\n\r\nexport default function AddPage(props) {\r\n    \r\n    //rooms will be at the form of [[[room0name], [room0type], [room0color], 0, [item1, item2]], [[room1name], [room1type], [room1color],1 [item1, item2]]]\r\n\r\n\r\n    const [pickedRoom, setpickedRoom] = useState(false);\r\n    const [roomType, setroomType] = useState('choose');\r\n    const [pickedName, setpickedName] = useState(false);\r\n    const [roomName, setroomName] = useState('');\r\n    const [colorPicked, setcolorPicked] = useState(\"black\");\r\n    const [roomList, setroomList] = useState([]);\r\n    const [howManyRoomsCreated,sethowManyRoomsCreated] =useState(0);\r\n    const didPickedRoom = (value) =>{\r\n        if (value != \"choose\"){\r\n            setpickedRoom(true)\r\n            setroomType(value)\r\n        }\r\n        else{\r\n            setpickedRoom(false)\r\n        }\r\n            \r\n    }\r\n    \r\n    const didPickedName = (value) =>{\r\n        if (value != \"\" & value.length <=5){\r\n            setpickedName(true)\r\n            setroomName(value)\r\n        }\r\n        else{\r\n            setpickedName(false)\r\n        }\r\n    }    \r\n\r\n    const colorPickedFunc = (value) =>{\r\n        setcolorPicked(value)\r\n\r\n    }\r\n\r\n    const isValid = () =>{\r\n        if (pickedRoom & pickedName){\r\n            let roomIndex = props.index\r\n            setroomList([[roomType,roomName,colorPicked,roomIndex,[]],...roomList])\r\n            console.log(roomList)\r\n            roomIndex= roomIndex+1\r\n            props.setIndex(roomIndex)\r\n            sethowManyRoomsCreated(howManyRoomsCreated+1)\r\n            console.log(howManyRoomsCreated)\r\n\r\n        }\r\n        else{\r\n            alert(`Name must contain 1 to 5 characters \r\n            Room type must be chosen`)\r\n            {} // how to change page by click with options\r\n            \r\n        }\r\n    }\r\n    \r\n    const addroom = () =>{\r\n        props.roomList1(roomList)\r\n        console.log(howManyRoomsCreated)\r\n\r\n        props.setCreated(howManyRoomsCreated)\r\n       \r\n    }\r\n     \r\n    return (\r\n        <div className='AddPage'>\r\n            <Title/>\r\n            <section className='col-12'>\r\n                <select onChange={e=> didPickedRoom(e.target.value)} className=''>\r\n                    <option value=\"choose\">Choose a room</option>\r\n                    <option value=\"livingRoom\">Living room</option>\r\n                    <option value=\"bathroom\">Bathroom</option>\r\n                    <option value=\"kitchen \">Kitchen </option>\r\n                    <option value=\"bedroom\">Bedroom</option>\r\n                </select>                \r\n                <div className=''>\r\n                    <div class='name'>Enter Room Name</div>\r\n                    <input onChange={e=>didPickedName(e.target.value)} type=\"text\" className=''/>\r\n                </div>\r\n                <div className=''>\r\n                    <div className=''>Pick Room Color</div>\r\n                    <input onChange={e=>colorPickedFunc(e.target.value)} type=\"color\"/>\r\n                </div>\r\n\r\n                <button className=\"btn\" onClick={()=>isValid()}>\r\n                    CREATE ROOM!\r\n                </button>\r\n\r\n                <div type=\"button\" onClick={addroom}>\r\n                    \r\n                    <Link to='/'>FINISH!</Link>\r\n                </div>\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Consumer } from '../ContextApi'\r\nimport {useState} from 'react'\r\n\r\nexport default function Items(props) {\r\n    \r\n    const bgcolor = (isOn) => {\r\n        if (isOn){\r\n            return \"#00FF00\"\r\n        }\r\n        else{\r\n            return \"#FF0000\"\r\n\r\n        }\r\n    }\r\n\r\n    const switchIt = (item) => {\r\n  \r\n        item[2] = !item[2]\r\n\r\n    }\r\n    \r\n    \r\n    return (    \r\n        \r\n        <div id=\"items\" style={{display:\"flex\",justifyContent:\"center\", alignItems:\"center\"}}>\r\n            {(props.items[props.index][4]).map(item=>\r\n                <button onClick={()=>switchIt(item)} style={{backgroundColor:bgcolor(item[2]), margin:\"1em\", width:\"10em\"}}>{item[0]}</button>\r\n            )}\r\n        </div>\r\n       \r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n// import React from 'react'\r\n// import { Link, useLocation } from 'react-router-dom'\r\n// import { Consumer } from '../ContextApi'\r\n// import Title from './Title'\r\n// import { useEffect } from 'react'\r\n// import {useState} from 'react'\r\n// import Items from './Items'\r\n\r\n\r\n\r\n// export default function Room(props) {\r\n\r\n    \r\n//     let [clickCounter,setclickCounter] = useState(0)\r\n//     const [itemType, setitemType] = useState('choose')\r\n//     const currList = props.rooms\r\n//     const currIndex = props.roomIndex\r\n//     console.log(currList)\r\n//     console.log(currIndex)\r\n\r\n//     const ItemList = currList[currIndex][4]\r\n//     console.log(ItemList)\r\n//     let currItemIndex = ItemList.length\r\n//     const [currItemIndex1, setcurrItemIndex] = useState(currItemIndex)\r\n\r\n//     console.log(currItemIndex)\r\n\r\n//     //let currItemIndex = ItemList.length\r\n//     //const currItem = ItemList[ItemList.length-1]\r\n//     const whichItem = (item) => {\r\n//         setitemType(item)\r\n//     }\r\n\r\n//     const haveStereo = (itemList) => {\r\n//         for(let i=0; i<ItemList.length; i++){\r\n//             // going over all items type\r\n//             if(itemList[i][0] == \"stereoSystem\")\r\n//                 return true\r\n//         }\r\n//         return false\r\n//     }\r\n\r\n//     const addAndToggle = () => {        \r\n//         //only up to 5 items are allowed\r\n//         if (currItemIndex1<5){ \r\n//             let currList = props.rooms\r\n//             const currIndex = props.roomIndex             \r\n//             let alreadyHaveStereohave = haveStereo(currList[currIndex][4]) //only one sterio is allowed\r\n//             if(itemType ==\"stereoSystem\" && alreadyHaveStereohave){\r\n//                 alert(\"cant have more than 1 stereo system\")\r\n//             }\r\n//             else{\r\n//                 if (itemType != \"choose\"){\r\n//                     if(clickCounter==1){\r\n//                         const item={\r\n//                             itemType: itemType,\r\n//                             itemIndex: currItemIndex,\r\n//                             itemOn: false\r\n//                         }                         \r\n//                         currList[currIndex][4] = [...(currList[currIndex][4]), [itemType,currItemIndex1,false]]\r\n//                         setcurrItemIndex(currItemIndex1+1)\r\n//                         props.setItems(currList)           \r\n//                         currList = props.rooms               \r\n            \r\n//                         const x = document.getElementById(\"myDiv\");\r\n//                         x.style.display = \"none\"\r\n//                         setclickCounter(0)\r\n        \r\n//                     }\r\n//                     else{\r\n//                         setclickCounter(1)\r\n//                     }\r\n                    \r\n//                 }\r\n//                 else{\r\n//                     alert(\"must pick an item\")\r\n//                 }\r\n//             }            \r\n//         }\r\n//         else{\r\n//             alert(\"you can add up to 5 items\")\r\n//         } \r\n        \r\n        \r\n        \r\n//     }\r\n\r\n//     const destroyItems = () => {\r\n//         document.getElementById(\"items\").remove()\r\n\r\n//     }\r\n    \r\n//     const toggle = () => {\r\n//         var x = document.getElementById(\"myDiv\");\r\n//         if (x.style.display === \"none\") {\r\n//           x.style.display = \"block\";\r\n//           var y = document.getElementById(\"bathroom\");\r\n//           var z = document.getElementById(\"notBathroom\");\r\n//             if (props.type==\"bathroom\") {\r\n//                 y.style.display = \"block\";\r\n//                 z.style.display = \"none\";\r\n//             }\r\n//             else{\r\n//                 z.style.display = \"block\";\r\n//                 y.style.display = \"none\";\r\n//             }\r\n\r\n//             } \r\n//         else {\r\n//             x.style.display = \"none\";\r\n//             }\r\n//     }\r\n\r\n\r\n\r\n    \r\n\r\n\r\n\r\n\r\n\r\n//     const [clickCounter,setClickCounter] = useState(0)\r\n//     const bgcolor = (isOn) => {\r\n//         if (isOn){\r\n//             return \"#00FF00\"\r\n//         }\r\n//         else{\r\n//             return \"#FF0000\"\r\n\r\n//         }\r\n//     }\r\n\r\n//     const switchIt = (item) => {\r\n//         console.log(clickCounter)\r\n//         setClickCounter(clickCounter+1)\r\n//         if(clickCounter==2)\r\n//             item[2] = !item[2]\r\n//             setClickCounter(0)\r\n\r\n//     }\r\n    \r\n\r\n//     return (\r\n//         <div className='roomPage'>\r\n            \r\n//             <Title/>\r\n//             <div>\r\n//                 room name:{props.name}\r\n//             </div>\r\n//             <div>\r\n//                 room type:{props.type}\r\n//             </div>\r\n//             <button onClick={()=>toggle()}> \r\n//                 Add Item\r\n//             </button>\r\n            \r\n//             <div id=\"myDiv\" style={{display:\"none\"}}>\r\n              \r\n//                 <div id=\"bathroom\">\r\n//                     <select onChange={e=> whichItem(e.target.value)}>\r\n//                         <option value=\"choose\"> choose item</option>\r\n//                         <option value=\"stereoSystem\"> stereo system</option>\r\n//                         <option value=\"airConditioner\"> air conditioner</option>\r\n//                         <option value=\"light\"> light</option>\r\n//                         <option value=\"boiler\"> boiler</option>                        \r\n//                     </select>\r\n//                     <button onClick={()=>addAndToggle()}>\r\n//                         CLICK TWICE :)\r\n//                     </button> \r\n//                 </div>\r\n\r\n//                 <div id=\"notBathroom\">\r\n//                     <select onChange={e=> whichItem(e.target.value)}>\r\n//                         <option value=\"choose\"> choose item</option>\r\n//                         <option value=\"stereoSystem\"> stereo system</option>\r\n//                         <option value=\"airConditioner\"> air conditioner</option>\r\n//                         <option value=\"light\"> light</option>\r\n//                     </select>\r\n//                     <button onClick={()=>addAndToggle()}>\r\n//                         CLICK TWICE :)\r\n\r\n//                     </button>                \r\n//                 </div>\r\n                           \r\n//             </div>    \r\n  \r\n \r\n        \r\n//         <div id=\"items\" style={{display:\"flex\",justifyContent:\"center\", alignItems:\"center\"}}>\r\n//             {(props.items[props.index][4]).map(item=>\r\n//                 <button onClick={()=>switchIt(item)} style={{backgroundColor:bgcolor(item[2]), margin:\"1em\", width:\"10em\"}}>{item[0]}</button>\r\n//             )}\r\n//         </div>\r\n//             <Items items={currList} index={currIndex} itemIndex={currItemIndex1}/>                   \r\n\r\n//             <Link onClick={destroyItems} to='/'>\r\n//                 home\r\n//             </Link>\r\n\r\n//         </div>\r\n\r\n//     )\r\n// }\r\n","import React from 'react'\r\nimport { Link, useLocation } from 'react-router-dom'\r\nimport { Consumer } from '../ContextApi'\r\nimport Title from './Title'\r\nimport { useEffect } from 'react'\r\nimport {useState} from 'react'\r\nimport Items from './Items'\r\n\r\n\r\n\r\nexport default function Room(props) {\r\n\r\n    \r\n    let [clickCounter,setclickCounter] = useState(0)\r\n    let [clickCounter1,setclickCounter1] = useState(0)\r\n    const [itemType, setitemType] = useState('choose')\r\n    const currList = props.rooms\r\n    const currIndex = props.roomIndex\r\n\r\n    const ItemList = currList[currIndex][4]\r\n    let currItemIndex = ItemList.length\r\n    const [currItemIndex1, setcurrItemIndex] = useState(currItemIndex)\r\n\r\n\r\n    //let currItemIndex = ItemList.length\r\n    //const currItem = ItemList[ItemList.length-1]\r\n    const whichItem = (item) => {\r\n        setitemType(item)\r\n    }\r\n\r\n    const haveStereo = (itemList) => {\r\n        for(let i=0; i<ItemList.length; i++){\r\n            // going over all items type\r\n            if(itemList[i][0] == \"stereoSystem\")\r\n                return true\r\n        }\r\n        return false\r\n    }\r\n    \r\n\r\n\r\n    const addAndToggle = () => {        \r\n        //only up to 5 items are allowed\r\n        if (currItemIndex1<5){ \r\n            let currList = props.rooms\r\n            const currIndex = props.roomIndex             \r\n            let alreadyHaveStereohave = haveStereo(currList[currIndex][4]) //only one sterio is allowed\r\n            if(itemType ==\"stereoSystem\" && alreadyHaveStereohave){\r\n                alert(\"cant have more than 1 stereo system\")\r\n            }\r\n            else{\r\n                if (itemType != \"choose\"){\r\n                    if(clickCounter==1){\r\n                                            \r\n                        currList[currIndex][4] = [...(currList[currIndex][4]), [itemType,currItemIndex1,false]]\r\n                        setcurrItemIndex(currItemIndex1+1)\r\n                        props.setItems(currList)           \r\n                        currList = props.rooms               \r\n            \r\n                        const x = document.getElementById(\"myDiv\");\r\n                        x.style.display = \"none\"\r\n                        setclickCounter(0)\r\n        \r\n                    }\r\n                    else{\r\n                        setclickCounter(1)\r\n                    }\r\n                    \r\n                }\r\n                else{\r\n                    alert(\"must pick an item\")\r\n                }\r\n            }            \r\n        }\r\n        else{\r\n            alert(\"you can add up to 5 items\")\r\n        } \r\n        \r\n        \r\n        \r\n    }\r\n\r\n    const destroyItems = () => {\r\n        document.getElementById(\"items\").remove()\r\n\r\n    }\r\n    \r\n    const toggle = () => {\r\n        var x = document.getElementById(\"myDiv\");\r\n        if (x.style.display === \"none\") {\r\n          x.style.display = \"block\";\r\n          var y = document.getElementById(\"bathroom\");\r\n          var z = document.getElementById(\"notBathroom\");\r\n            if (props.type==\"bathroom\") {\r\n                y.style.display = \"block\";\r\n                z.style.display = \"none\";\r\n            }\r\n            else{\r\n                z.style.display = \"block\";\r\n                y.style.display = \"none\";\r\n            }\r\n\r\n            } \r\n        else {\r\n            x.style.display = \"none\";\r\n            }\r\n    }\r\n\r\n\r\n\r\n    \r\n\r\n\r\n    \r\n\r\n    return (\r\n        <div className='roomPage'>\r\n            \r\n            <Title/>\r\n            <div>\r\n                room name:{props.name}\r\n            </div>\r\n            <div>\r\n                room type:{props.type}\r\n            </div>\r\n            <button onClick={()=>toggle()}> \r\n                Add Item\r\n            </button>\r\n            \r\n            <div id=\"myDiv\" style={{display:\"none\"}}>\r\n              \r\n                <div id=\"bathroom\">\r\n                    <select onChange={e=> whichItem(e.target.value)}>\r\n                        <option value=\"choose\"> choose item</option>\r\n                        <option value=\"stereoSystem\"> stereo system</option>\r\n                        <option value=\"airConditioner\"> air conditioner</option>\r\n                        <option value=\"light\"> light</option>\r\n                        <option value=\"boiler\"> boiler</option>                        \r\n                    </select>\r\n                    <button onClick={()=>addAndToggle()}>\r\n                        CLICK TWICE :)\r\n                    </button> \r\n                </div>\r\n\r\n                <div id=\"notBathroom\">\r\n                    <select onChange={e=> whichItem(e.target.value)}>\r\n                        <option value=\"choose\"> choose item</option>\r\n                        <option value=\"stereoSystem\"> stereo system</option>\r\n                        <option value=\"airConditioner\"> air conditioner</option>\r\n                        <option value=\"light\"> light</option>\r\n                    </select>\r\n                    <button onClick={()=>addAndToggle()}>\r\n                        CLICK TWICE :)\r\n\r\n                    </button>                \r\n                </div>\r\n                           \r\n            </div>    \r\n  \r\n            <Items items={currList} index={currIndex} itemIndex={currItemIndex1}/>                   \r\n\r\n\r\n            <Link onClick={destroyItems} to='/'>\r\n                home\r\n            </Link>\r\n\r\n\r\n            <div>\r\n                .השינוי בצבע של הכפתורים עובד פשוט צריך לרדנר שוב \r\n            </div>\r\n            <div>\r\n            כמו ללחוץ על הוסף מוצר וכשתנסה לבחור מוצר חדש תראה שהצבע משתנה וגם נשמר ביציאה מהעמוד \r\n\r\n            </div>\r\n            <div>\r\n                לא הצלחתי לגרום לשינוי בצבע להופיע ישר לצערי     \r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n","import {HashRouter as Router, Routes, Route, Link} from 'react-router-dom'\nimport HomePage from './component/HomePage';\nimport React, {useState} from 'react'\nimport AddPage from './component/AddPage';\nimport AddPageButton from './component/AddPageButton';\nimport { Provider } from './ContextApi';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './App.css';\nimport {roomList} from './component/AddPage'\nimport Room from './component/Room';\n\nfunction App() {\n  const titleAddPage = \"Smart House\"\n  const titleHomePage = \"SMART HOUSE\"\n  const [roomList, setroomList] = useState([])\n  const [roomType1, setroomType1] = useState('')\n  const [roomName1, setroomName1] = useState('')\n  const [roomIndex, setroomIndex] = useState(0) //reference to how maany rooms were created\n  const [roomIndexClicked, setroomIndexClicked] = useState(0) //once clicking on the link in home page we pass the room index\n  const [roomIndexAndItems, setroomIndexAndItems] = useState([])\n\n  const roomType = (type) => setroomType1(type)\n  const roomName = (type) => setroomName1(type)\n  const setIndex1 = (index) => setroomIndex(index)\n  const setIndexFromHome = (index) => {\n    setroomIndexClicked(index)\n  }\n\n  //[[0,1,1,0],[1,1,1,1,1],[0,0,0,1,0]] in room 0 item0 off item1 on item2 on item3 off.\n  const setroomIndexAndItems1 = (howManyCreated) => {\n    if(howManyCreated>0){\n      for (let i=1; i<=howManyCreated; i++){\n        setroomIndexAndItems(roomIndexAndItems.push([]))\n      }\n      console.log(roomIndexAndItems)\n\n    }\n\n  }\n\n  console.log(roomIndexAndItems)\n\n\n  const roomListFunc = (list) => {\n    return setroomList(([...roomList,...list]))\n  }\n  \n  const updateList = (list) => {\n    return setroomList(list)\n  }\n  \n  const toHomePage = {\n    rooms: roomList,\n    title: titleHomePage\n  }\n\n  const toRoomPage = {\n    rooms: roomList,\n    title: titleHomePage    \n  }\n  const toAddPage = {\n    title: titleAddPage\n  }\n  //console.log(roomList)\n\n\n  return (\n    <div className=\"App\">\n    \n    <Router>\n      <Routes>\n        <Route path=\"/\" element={\n          <Provider value={toHomePage}>\n            <HomePage theType={roomType} theName={roomName} index={setIndexFromHome}/>\n          </Provider>}/>     \n        <Route path=\"/addpage\" element={\n          <Provider value={toAddPage}>\n            <AddPage roomList1 = {roomListFunc} index={roomIndex} setIndex={setIndex1} setCreated={setroomIndexAndItems1}/>\n          </Provider>}/>\n        <Route path=\"/room\" element={\n          <Provider value={toRoomPage}>\n            <Room  rooms={roomList} type={roomType1} name={roomName1} roomIndex={roomIndexClicked} setItems={updateList} itemStatus={roomIndexAndItems}/>\n          </Provider>}/>\n        \n      </Routes>\n    </Router>\n    \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n\n  document.getElementById('root')\n\n);\n\n\n"],"sourceRoot":""}